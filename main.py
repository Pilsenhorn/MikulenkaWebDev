from fastapi import FastAPI, Form, Request
from fastapi.responses import HTMLResponse, JSONResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from fastapi.middleware.cors import CORSMiddleware
import smtplib, os
from email.message import EmailMessage

app = FastAPI()

# --- CORS nastaven√≠ ---
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "https://michalmikulenka.vercel.app",
        "http://localhost:5173",
        "http://localhost:5000"  # p≈ôidej si i dal≈°√≠, kdyby jsi testoval lok√°lnƒõ
    ],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# --- Static a Templates ---
app.mount("/static", StaticFiles(directory="static"), name="static")
templates = Jinja2Templates(directory="templates")

# --- Domovsk√° str√°nka ---
@app.get("/", response_class=HTMLResponse)
async def home(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})

# --- Endpoint pro odesl√°n√≠ mailu ---
@app.post("/send")
async def send_message(
    name: str = Form(...),
    email: str = Form(...),
    message: str = Form(...)
):
    print(f"üì© P≈ôijata zpr√°va od: {name} ({email})")  # Debug log
    
    smtp_email = os.getenv("SMTP_EMAIL")
    smtp_password = os.getenv("SMTP_PASSWORD")
    
    # Kontrola environment variables
    if not smtp_email or not smtp_password:
        print("‚ùå CHYBA: SMTP_EMAIL nebo SMTP_PASSWORD nejsou nastaven√©!")
        return JSONResponse(
            {"status": "error", "message": "Server nen√≠ spr√°vnƒõ nakonfigurov√°n."},
            status_code=500
        )
    
    try:
        msg = EmailMessage()
        msg['Subject'] = f'Nov√° zpr√°va z portfolia od {name}'
        msg['From'] = smtp_email
        msg['To'] = smtp_email
        msg.set_content(f"Od: {name}\nEmail: {email}\n\nZpr√°va:\n{message}")

        print(f"üìß Odes√≠l√°m email p≈ôes {smtp_email}...")
        
        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as smtp:
            smtp.login(smtp_email, smtp_password)
            smtp.send_message(msg)
        
        print("‚úÖ Email √∫spƒõ≈°nƒõ odesl√°n!")
        return JSONResponse({"status": "ok", "message": "Email byl √∫spƒõ≈°nƒõ odesl√°n."})
    
    except smtplib.SMTPAuthenticationError:
        print("‚ùå CHYBA: Neplatn√© p≈ôihla≈°ovac√≠ √∫daje! Zkontroluj App Password.")
        return JSONResponse(
            {"status": "error", "message": "Chyba autentizace. Zkontroluj SMTP nastaven√≠."},
            status_code=500
        )
    except Exception as e:
        print(f"‚ùå ERROR p≈ôi odes√≠l√°n√≠: {e}")
        return JSONResponse(
            {"status": "error", "message": f"Chyba: {str(e)}"},
            status_code=500
        )